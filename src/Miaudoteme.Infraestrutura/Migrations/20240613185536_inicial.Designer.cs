// <auto-generated />
using System;
using Miaudoteme.Infraestrutura.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Miaudoteme.Infraestrutura.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240613185536_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Miaudoteme.Domain.Models.Abrigo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("Char(14)");

                    b.Property<string>("Contato")
                        .IsRequired()
                        .HasColumnType("Char(11)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LicencaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeAbrigo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SituacaoAbrigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("LicencaId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Abrigos", (string)null);
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Adocao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AbrigoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("ContribuicaoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAdocao")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("SituacaoDaAdocao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("TutorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("AbrigoId")
                        .IsUnique();

                    b.HasIndex("AnimalId")
                        .IsUnique();

                    b.HasIndex("ContribuicaoId")
                        .IsUnique();

                    b.HasIndex("TutorId")
                        .IsUnique();

                    b.ToTable("Adocoes", (string)null);
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AbrigoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AnoNascimento")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Raca")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sobre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AbrigoId");

                    b.ToTable("Animais", (string)null);
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Contribuicao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ChavePix")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormaDePagamento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCartao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Parcelas")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Contribuicoes", (string)null);
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("CHAR(2)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Licenca", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Licencas", (string)null);
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Tutor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("CHAR(11)");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("Tutores", (string)null);
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Abrigo", b =>
                {
                    b.HasOne("Miaudoteme.Domain.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Miaudoteme.Domain.Models.Licenca", "Licenca")
                        .WithMany()
                        .HasForeignKey("LicencaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Miaudoteme.Domain.Models.Usuario", "Usuario")
                        .WithOne("Abrigo")
                        .HasForeignKey("Miaudoteme.Domain.Models.Abrigo", "UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Licenca");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Adocao", b =>
                {
                    b.HasOne("Miaudoteme.Domain.Models.Abrigo", "Abrigo")
                        .WithOne("Adocao")
                        .HasForeignKey("Miaudoteme.Domain.Models.Adocao", "AbrigoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Miaudoteme.Domain.Models.Animal", "Animal")
                        .WithOne("Adocao")
                        .HasForeignKey("Miaudoteme.Domain.Models.Adocao", "AnimalId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Miaudoteme.Domain.Models.Contribuicao", "Contribuicao")
                        .WithOne("Adocao")
                        .HasForeignKey("Miaudoteme.Domain.Models.Adocao", "ContribuicaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Miaudoteme.Domain.Models.Tutor", "Tutor")
                        .WithOne("Adocao")
                        .HasForeignKey("Miaudoteme.Domain.Models.Adocao", "TutorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Abrigo");

                    b.Navigation("Animal");

                    b.Navigation("Contribuicao");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Animal", b =>
                {
                    b.HasOne("Miaudoteme.Domain.Models.Abrigo", "Abrigo")
                        .WithMany("Animais")
                        .HasForeignKey("AbrigoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Abrigo");
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Tutor", b =>
                {
                    b.HasOne("Miaudoteme.Domain.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Miaudoteme.Domain.Models.Usuario", "Usuario")
                        .WithOne("Tutor")
                        .HasForeignKey("Miaudoteme.Domain.Models.Tutor", "UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Endereco");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Abrigo", b =>
                {
                    b.Navigation("Adocao")
                        .IsRequired();

                    b.Navigation("Animais");
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Animal", b =>
                {
                    b.Navigation("Adocao")
                        .IsRequired();
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Contribuicao", b =>
                {
                    b.Navigation("Adocao")
                        .IsRequired();
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Tutor", b =>
                {
                    b.Navigation("Adocao")
                        .IsRequired();
                });

            modelBuilder.Entity("Miaudoteme.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Abrigo")
                        .IsRequired();

                    b.Navigation("Tutor")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
